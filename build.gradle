import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.bmuschko.docker-spring-boot-application' version '9.3.3'
}

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'  // JWT API
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'    // JWT 구현체
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리를 위한 Jackson 모듈
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'  // JWT 인증 관련 jakarta 추가
    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}
tasks.register('buildDockerImage', DockerBuildImage) {
    inputDir.set(file('.'))  // Dockerfile이 있는 디렉토리 경로 설정
    images.set(['api/springboot-boilerplate:latest'])
}

tasks.register('runDockerCompose', Exec) {
    dependsOn buildDockerImage
    workingDir = projectDir
    commandLine 'docker-compose', 'up', '--build', '-d'  // Docker Compose 실행
}


tasks.named('test') {
    useJUnitPlatform()
}
